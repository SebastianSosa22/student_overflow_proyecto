"""Initial migration

Revision ID: 9409b011aeda
Revises: 
Create Date: 2024-08-15 00:15:15.205218

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9409b011aeda'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('vote')
    op.drop_table('comment')
    op.drop_table('answer')
    op.alter_column('questions', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('questions', 'title',
               existing_type=sa.CHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('questions', 'content',
               existing_type=sa.CHAR(length=255),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('questions', 'user_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('questions', 'created_at',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=True)
    op.create_foreign_key(None, 'questions', 'users', ['user_id'], ['id'])
    op.drop_column('questions', 'update_at')
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=150),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=150),
               existing_nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=150),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False,
               existing_server_default=sa.text("'standard'::character varying"))
    op.drop_column('users', 'created_at')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.alter_column('users', 'role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'standard'::character varying"))
    op.alter_column('users', 'password',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.add_column('questions', sa.Column('update_at', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'questions', type_='foreignkey')
    op.alter_column('questions', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=False)
    op.alter_column('questions', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('questions', 'content',
               existing_type=sa.Text(),
               type_=sa.CHAR(length=255),
               existing_nullable=False)
    op.alter_column('questions', 'title',
               existing_type=sa.String(length=200),
               type_=sa.CHAR(length=255),
               existing_nullable=False)
    op.alter_column('questions', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.create_table('answer',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.CHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('update_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='answer_question_id_foreign'),
    sa.PrimaryKeyConstraint('id', name='Answer_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('comment',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.CHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('answer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], name='comment_answer_id_foreign'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='comment_question_id_foreign'),
    sa.PrimaryKeyConstraint('id', name='Comment_pkey')
    )
    op.create_table('vote',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('answer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('vote_type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=False),
    sa.CheckConstraint("(vote_type)::text = ''::text", name='Vote_vote_type_check'),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], name='vote_answer_id_foreign'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], name='vote_question_id_foreign'),
    sa.PrimaryKeyConstraint('id', name='Vote_pkey')
    )
    op.drop_table('answers')
    # ### end Alembic commands ###
